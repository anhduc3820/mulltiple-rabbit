package com.example.rabbit.mulltiplerabbit.protobuff;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: query_model.proto

public final class QueryModel {
  private QueryModel() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code CalculationMode}
   */
  public enum CalculationMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CAL_NONE = 0;</code>
     */
    CAL_NONE(0),
    /**
     * <code>CAL_CFD = 1;</code>
     */
    CAL_CFD(1),
    /**
     * <code>CAL_SPAN = 2;</code>
     */
    CAL_SPAN(2),
    /**
     * <code>CAL_FOREX = 3;</code>
     */
    CAL_FOREX(3),
    /**
     * <code>CAL_STOCK = 4;</code>
     */
    CAL_STOCK(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CAL_NONE = 0;</code>
     */
    public static final int CAL_NONE_VALUE = 0;
    /**
     * <code>CAL_CFD = 1;</code>
     */
    public static final int CAL_CFD_VALUE = 1;
    /**
     * <code>CAL_SPAN = 2;</code>
     */
    public static final int CAL_SPAN_VALUE = 2;
    /**
     * <code>CAL_FOREX = 3;</code>
     */
    public static final int CAL_FOREX_VALUE = 3;
    /**
     * <code>CAL_STOCK = 4;</code>
     */
    public static final int CAL_STOCK_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static CalculationMode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CalculationMode forNumber(int value) {
      switch (value) {
        case 0: return CAL_NONE;
        case 1: return CAL_CFD;
        case 2: return CAL_SPAN;
        case 3: return CAL_FOREX;
        case 4: return CAL_STOCK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CalculationMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CalculationMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CalculationMode>() {
            public CalculationMode findValueByNumber(int number) {
              return CalculationMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return QueryModel.getDescriptor().getEnumTypes().get(0);
    }

    private static final CalculationMode[] VALUES = values();

    public static CalculationMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CalculationMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CalculationMode)
  }

  /**
   * Protobuf enum {@code MarginMode}
   */
  public enum MarginMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MARGIN_MODE_NONE = 0;</code>
     */
    MARGIN_MODE_NONE(0),
    /**
     * <code>MARGIN_MODE_ALLOW = 1;</code>
     */
    MARGIN_MODE_ALLOW(1),
    /**
     * <code>MARGIN_MODE_DENY = 2;</code>
     */
    MARGIN_MODE_DENY(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MARGIN_MODE_NONE = 0;</code>
     */
    public static final int MARGIN_MODE_NONE_VALUE = 0;
    /**
     * <code>MARGIN_MODE_ALLOW = 1;</code>
     */
    public static final int MARGIN_MODE_ALLOW_VALUE = 1;
    /**
     * <code>MARGIN_MODE_DENY = 2;</code>
     */
    public static final int MARGIN_MODE_DENY_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static MarginMode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MarginMode forNumber(int value) {
      switch (value) {
        case 0: return MARGIN_MODE_NONE;
        case 1: return MARGIN_MODE_ALLOW;
        case 2: return MARGIN_MODE_DENY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MarginMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MarginMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MarginMode>() {
            public MarginMode findValueByNumber(int number) {
              return MarginMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return QueryModel.getDescriptor().getEnumTypes().get(1);
    }

    private static final MarginMode[] VALUES = values();

    public static MarginMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MarginMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:MarginMode)
  }

  /**
   * Protobuf enum {@code SymbolStatus}
   */
  public enum SymbolStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SYMBOL_NONE = 0;</code>
     */
    SYMBOL_NONE(0),
    /**
     * <code>SYMBOL_ACTIVE = 1;</code>
     */
    SYMBOL_ACTIVE(1),
    /**
     * <code>SYMBOL_SUSPENDED = 2;</code>
     */
    SYMBOL_SUSPENDED(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>SYMBOL_NONE = 0;</code>
     */
    public static final int SYMBOL_NONE_VALUE = 0;
    /**
     * <code>SYMBOL_ACTIVE = 1;</code>
     */
    public static final int SYMBOL_ACTIVE_VALUE = 1;
    /**
     * <code>SYMBOL_SUSPENDED = 2;</code>
     */
    public static final int SYMBOL_SUSPENDED_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static SymbolStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SymbolStatus forNumber(int value) {
      switch (value) {
        case 0: return SYMBOL_NONE;
        case 1: return SYMBOL_ACTIVE;
        case 2: return SYMBOL_SUSPENDED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SymbolStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SymbolStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SymbolStatus>() {
            public SymbolStatus findValueByNumber(int number) {
              return SymbolStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return QueryModel.getDescriptor().getEnumTypes().get(2);
    }

    private static final SymbolStatus[] VALUES = values();

    public static SymbolStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SymbolStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SymbolStatus)
  }

  /**
   * Protobuf enum {@code CallPut}
   */
  public enum CallPut
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CP_NONE = 0;</code>
     */
    CP_NONE(0),
    /**
     * <code>CP_CALL = 1;</code>
     */
    CP_CALL(1),
    /**
     * <code>CP_PUT = 2;</code>
     */
    CP_PUT(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CP_NONE = 0;</code>
     */
    public static final int CP_NONE_VALUE = 0;
    /**
     * <code>CP_CALL = 1;</code>
     */
    public static final int CP_CALL_VALUE = 1;
    /**
     * <code>CP_PUT = 2;</code>
     */
    public static final int CP_PUT_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static CallPut valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CallPut forNumber(int value) {
      switch (value) {
        case 0: return CP_NONE;
        case 1: return CP_CALL;
        case 2: return CP_PUT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CallPut>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CallPut> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CallPut>() {
            public CallPut findValueByNumber(int number) {
              return CallPut.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return QueryModel.getDescriptor().getEnumTypes().get(3);
    }

    private static final CallPut[] VALUES = values();

    public static CallPut valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CallPut(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CallPut)
  }

  public interface SymbolOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Symbol)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 symbol_id = 1;</code>
     * @return The symbolId.
     */
    int getSymbolId();

    /**
     * <code>int32 group_id = 2;</code>
     * @return The groupId.
     */
    int getGroupId();

    /**
     * <code>string symbol_code = 3;</code>
     * @return The symbolCode.
     */
    String getSymbolCode();
    /**
     * <code>string symbol_code = 3;</code>
     * @return The bytes for symbolCode.
     */
    com.google.protobuf.ByteString
        getSymbolCodeBytes();

    /**
     * <code>string symbol_name = 4;</code>
     * @return The symbolName.
     */
    String getSymbolName();
    /**
     * <code>string symbol_name = 4;</code>
     * @return The bytes for symbolName.
     */
    com.google.protobuf.ByteString
        getSymbolNameBytes();

    /**
     * <code>.CalculationMode calculation_mode = 5;</code>
     * @return The enum numeric value on the wire for calculationMode.
     */
    int getCalculationModeValue();
    /**
     * <code>.CalculationMode calculation_mode = 5;</code>
     * @return The calculationMode.
     */
    CalculationMode getCalculationMode();

    /**
     * <code>int64 contract_size = 6;</code>
     * @return The contractSize.
     */
    long getContractSize();

    /**
     * <code>int64 digits = 7;</code>
     * @return The digits.
     */
    long getDigits();

    /**
     * <code>string exchange_code = 8;</code>
     * @return The exchangeCode.
     */
    String getExchangeCode();
    /**
     * <code>string exchange_code = 8;</code>
     * @return The bytes for exchangeCode.
     */
    com.google.protobuf.ByteString
        getExchangeCodeBytes();

    /**
     * <code>string currency_code = 9;</code>
     * @return The currencyCode.
     */
    String getCurrencyCode();
    /**
     * <code>string currency_code = 9;</code>
     * @return The bytes for currencyCode.
     */
    com.google.protobuf.ByteString
        getCurrencyCodeBytes();

    /**
     * <code>string description = 10;</code>
     * @return The description.
     */
    String getDescription();
    /**
     * <code>string description = 10;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <code>string strike_price = 11;</code>
     * @return The strikePrice.
     */
    String getStrikePrice();
    /**
     * <code>string strike_price = 11;</code>
     * @return The bytes for strikePrice.
     */
    com.google.protobuf.ByteString
        getStrikePriceBytes();

    /**
     * <code>string contract_month = 12;</code>
     * @return The contractMonth.
     */
    String getContractMonth();
    /**
     * <code>string contract_month = 12;</code>
     * @return The bytes for contractMonth.
     */
    com.google.protobuf.ByteString
        getContractMonthBytes();

    /**
     * <code>string limit_max = 13;</code>
     * @return The limitMax.
     */
    String getLimitMax();
    /**
     * <code>string limit_max = 13;</code>
     * @return The bytes for limitMax.
     */
    com.google.protobuf.ByteString
        getLimitMaxBytes();

    /**
     * <code>string limit_down = 14;</code>
     * @return The limitDown.
     */
    String getLimitDown();
    /**
     * <code>string limit_down = 14;</code>
     * @return The bytes for limitDown.
     */
    com.google.protobuf.ByteString
        getLimitDownBytes();

    /**
     * <code>string celling = 15;</code>
     * @return The celling.
     */
    String getCelling();
    /**
     * <code>string celling = 15;</code>
     * @return The bytes for celling.
     */
    com.google.protobuf.ByteString
        getCellingBytes();

    /**
     * <code>string floor = 16;</code>
     * @return The floor.
     */
    String getFloor();
    /**
     * <code>string floor = 16;</code>
     * @return The bytes for floor.
     */
    com.google.protobuf.ByteString
        getFloorBytes();

    /**
     * <code>.ProductType product_type = 17;</code>
     * @return The enum numeric value on the wire for productType.
     */
    int getProductTypeValue();
    /**
     * <code>.ProductType product_type = 17;</code>
     * @return The productType.
     */
    TradingModel.ProductType getProductType();

    /**
     * <code>string tick_size = 18;</code>
     * @return The tickSize.
     */
    String getTickSize();
    /**
     * <code>string tick_size = 18;</code>
     * @return The bytes for tickSize.
     */
    com.google.protobuf.ByteString
        getTickSizeBytes();

    /**
     * <code>int64 trading_unit = 19;</code>
     * @return The tradingUnit.
     */
    long getTradingUnit();

    /**
     * <code>.MarginMode margin_mode = 20;</code>
     * @return The enum numeric value on the wire for marginMode.
     */
    int getMarginModeValue();
    /**
     * <code>.MarginMode margin_mode = 20;</code>
     * @return The marginMode.
     */
    MarginMode getMarginMode();

    /**
     * <code>.SymbolStatus status = 21;</code>
     * @return The enum numeric value on the wire for status.
     */
    int getStatusValue();
    /**
     * <code>.SymbolStatus status = 21;</code>
     * @return The status.
     */
    SymbolStatus getStatus();

    /**
     * <code>string product_code = 22;</code>
     * @return The productCode.
     */
    String getProductCode();
    /**
     * <code>string product_code = 22;</code>
     * @return The bytes for productCode.
     */
    com.google.protobuf.ByteString
        getProductCodeBytes();

    /**
     * <code>.Span span = 23;</code>
     * @return Whether the span field is set.
     */
    boolean hasSpan();
    /**
     * <code>.Span span = 23;</code>
     * @return The span.
     */
    Span getSpan();
    /**
     * <code>.Span span = 23;</code>
     */
    SpanOrBuilder getSpanOrBuilder();

    /**
     * <code>.CallPut cp = 24;</code>
     * @return The enum numeric value on the wire for cp.
     */
    int getCpValue();
    /**
     * <code>.CallPut cp = 24;</code>
     * @return The cp.
     */
    CallPut getCp();
  }
  /**
   * Protobuf type {@code Symbol}
   */
  public static final class Symbol extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Symbol)
      SymbolOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Symbol.newBuilder() to construct.
    private Symbol(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Symbol() {
      symbolCode_ = "";
      symbolName_ = "";
      calculationMode_ = 0;
      exchangeCode_ = "";
      currencyCode_ = "";
      description_ = "";
      strikePrice_ = "";
      contractMonth_ = "";
      limitMax_ = "";
      limitDown_ = "";
      celling_ = "";
      floor_ = "";
      productType_ = 0;
      tickSize_ = "";
      marginMode_ = 0;
      status_ = 0;
      productCode_ = "";
      cp_ = 0;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new Symbol();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Symbol(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              symbolId_ = input.readInt32();
              break;
            }
            case 16: {

              groupId_ = input.readInt32();
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              symbolCode_ = s;
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              symbolName_ = s;
              break;
            }
            case 40: {
              int rawValue = input.readEnum();

              calculationMode_ = rawValue;
              break;
            }
            case 48: {

              contractSize_ = input.readInt64();
              break;
            }
            case 56: {

              digits_ = input.readInt64();
              break;
            }
            case 66: {
              String s = input.readStringRequireUtf8();

              exchangeCode_ = s;
              break;
            }
            case 74: {
              String s = input.readStringRequireUtf8();

              currencyCode_ = s;
              break;
            }
            case 82: {
              String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 90: {
              String s = input.readStringRequireUtf8();

              strikePrice_ = s;
              break;
            }
            case 98: {
              String s = input.readStringRequireUtf8();

              contractMonth_ = s;
              break;
            }
            case 106: {
              String s = input.readStringRequireUtf8();

              limitMax_ = s;
              break;
            }
            case 114: {
              String s = input.readStringRequireUtf8();

              limitDown_ = s;
              break;
            }
            case 122: {
              String s = input.readStringRequireUtf8();

              celling_ = s;
              break;
            }
            case 130: {
              String s = input.readStringRequireUtf8();

              floor_ = s;
              break;
            }
            case 136: {
              int rawValue = input.readEnum();

              productType_ = rawValue;
              break;
            }
            case 146: {
              String s = input.readStringRequireUtf8();

              tickSize_ = s;
              break;
            }
            case 152: {

              tradingUnit_ = input.readInt64();
              break;
            }
            case 160: {
              int rawValue = input.readEnum();

              marginMode_ = rawValue;
              break;
            }
            case 168: {
              int rawValue = input.readEnum();

              status_ = rawValue;
              break;
            }
            case 178: {
              String s = input.readStringRequireUtf8();

              productCode_ = s;
              break;
            }
            case 186: {
              Span.Builder subBuilder = null;
              if (span_ != null) {
                subBuilder = span_.toBuilder();
              }
              span_ = input.readMessage(Span.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(span_);
                span_ = subBuilder.buildPartial();
              }

              break;
            }
            case 192: {
              int rawValue = input.readEnum();

              cp_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return QueryModel.internal_static_Symbol_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return QueryModel.internal_static_Symbol_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Symbol.class, Builder.class);
    }

    public static final int SYMBOL_ID_FIELD_NUMBER = 1;
    private int symbolId_;
    /**
     * <code>int32 symbol_id = 1;</code>
     * @return The symbolId.
     */
    @Override
    public int getSymbolId() {
      return symbolId_;
    }

    public static final int GROUP_ID_FIELD_NUMBER = 2;
    private int groupId_;
    /**
     * <code>int32 group_id = 2;</code>
     * @return The groupId.
     */
    @Override
    public int getGroupId() {
      return groupId_;
    }

    public static final int SYMBOL_CODE_FIELD_NUMBER = 3;
    private volatile Object symbolCode_;
    /**
     * <code>string symbol_code = 3;</code>
     * @return The symbolCode.
     */
    @Override
    public String getSymbolCode() {
      Object ref = symbolCode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        symbolCode_ = s;
        return s;
      }
    }
    /**
     * <code>string symbol_code = 3;</code>
     * @return The bytes for symbolCode.
     */
    @Override
    public com.google.protobuf.ByteString
        getSymbolCodeBytes() {
      Object ref = symbolCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        symbolCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SYMBOL_NAME_FIELD_NUMBER = 4;
    private volatile Object symbolName_;
    /**
     * <code>string symbol_name = 4;</code>
     * @return The symbolName.
     */
    @Override
    public String getSymbolName() {
      Object ref = symbolName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        symbolName_ = s;
        return s;
      }
    }
    /**
     * <code>string symbol_name = 4;</code>
     * @return The bytes for symbolName.
     */
    @Override
    public com.google.protobuf.ByteString
        getSymbolNameBytes() {
      Object ref = symbolName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        symbolName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CALCULATION_MODE_FIELD_NUMBER = 5;
    private int calculationMode_;
    /**
     * <code>.CalculationMode calculation_mode = 5;</code>
     * @return The enum numeric value on the wire for calculationMode.
     */
    @Override public int getCalculationModeValue() {
      return calculationMode_;
    }
    /**
     * <code>.CalculationMode calculation_mode = 5;</code>
     * @return The calculationMode.
     */
    @Override public CalculationMode getCalculationMode() {
      @SuppressWarnings("deprecation")
      CalculationMode result = CalculationMode.valueOf(calculationMode_);
      return result == null ? CalculationMode.UNRECOGNIZED : result;
    }

    public static final int CONTRACT_SIZE_FIELD_NUMBER = 6;
    private long contractSize_;
    /**
     * <code>int64 contract_size = 6;</code>
     * @return The contractSize.
     */
    @Override
    public long getContractSize() {
      return contractSize_;
    }

    public static final int DIGITS_FIELD_NUMBER = 7;
    private long digits_;
    /**
     * <code>int64 digits = 7;</code>
     * @return The digits.
     */
    @Override
    public long getDigits() {
      return digits_;
    }

    public static final int EXCHANGE_CODE_FIELD_NUMBER = 8;
    private volatile Object exchangeCode_;
    /**
     * <code>string exchange_code = 8;</code>
     * @return The exchangeCode.
     */
    @Override
    public String getExchangeCode() {
      Object ref = exchangeCode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        exchangeCode_ = s;
        return s;
      }
    }
    /**
     * <code>string exchange_code = 8;</code>
     * @return The bytes for exchangeCode.
     */
    @Override
    public com.google.protobuf.ByteString
        getExchangeCodeBytes() {
      Object ref = exchangeCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        exchangeCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CURRENCY_CODE_FIELD_NUMBER = 9;
    private volatile Object currencyCode_;
    /**
     * <code>string currency_code = 9;</code>
     * @return The currencyCode.
     */
    @Override
    public String getCurrencyCode() {
      Object ref = currencyCode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        currencyCode_ = s;
        return s;
      }
    }
    /**
     * <code>string currency_code = 9;</code>
     * @return The bytes for currencyCode.
     */
    @Override
    public com.google.protobuf.ByteString
        getCurrencyCodeBytes() {
      Object ref = currencyCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        currencyCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 10;
    private volatile Object description_;
    /**
     * <code>string description = 10;</code>
     * @return The description.
     */
    @Override
    public String getDescription() {
      Object ref = description_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <code>string description = 10;</code>
     * @return The bytes for description.
     */
    @Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      Object ref = description_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STRIKE_PRICE_FIELD_NUMBER = 11;
    private volatile Object strikePrice_;
    /**
     * <code>string strike_price = 11;</code>
     * @return The strikePrice.
     */
    @Override
    public String getStrikePrice() {
      Object ref = strikePrice_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        strikePrice_ = s;
        return s;
      }
    }
    /**
     * <code>string strike_price = 11;</code>
     * @return The bytes for strikePrice.
     */
    @Override
    public com.google.protobuf.ByteString
        getStrikePriceBytes() {
      Object ref = strikePrice_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        strikePrice_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTRACT_MONTH_FIELD_NUMBER = 12;
    private volatile Object contractMonth_;
    /**
     * <code>string contract_month = 12;</code>
     * @return The contractMonth.
     */
    @Override
    public String getContractMonth() {
      Object ref = contractMonth_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        contractMonth_ = s;
        return s;
      }
    }
    /**
     * <code>string contract_month = 12;</code>
     * @return The bytes for contractMonth.
     */
    @Override
    public com.google.protobuf.ByteString
        getContractMonthBytes() {
      Object ref = contractMonth_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        contractMonth_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LIMIT_MAX_FIELD_NUMBER = 13;
    private volatile Object limitMax_;
    /**
     * <code>string limit_max = 13;</code>
     * @return The limitMax.
     */
    @Override
    public String getLimitMax() {
      Object ref = limitMax_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        limitMax_ = s;
        return s;
      }
    }
    /**
     * <code>string limit_max = 13;</code>
     * @return The bytes for limitMax.
     */
    @Override
    public com.google.protobuf.ByteString
        getLimitMaxBytes() {
      Object ref = limitMax_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        limitMax_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LIMIT_DOWN_FIELD_NUMBER = 14;
    private volatile Object limitDown_;
    /**
     * <code>string limit_down = 14;</code>
     * @return The limitDown.
     */
    @Override
    public String getLimitDown() {
      Object ref = limitDown_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        limitDown_ = s;
        return s;
      }
    }
    /**
     * <code>string limit_down = 14;</code>
     * @return The bytes for limitDown.
     */
    @Override
    public com.google.protobuf.ByteString
        getLimitDownBytes() {
      Object ref = limitDown_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        limitDown_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CELLING_FIELD_NUMBER = 15;
    private volatile Object celling_;
    /**
     * <code>string celling = 15;</code>
     * @return The celling.
     */
    @Override
    public String getCelling() {
      Object ref = celling_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        celling_ = s;
        return s;
      }
    }
    /**
     * <code>string celling = 15;</code>
     * @return The bytes for celling.
     */
    @Override
    public com.google.protobuf.ByteString
        getCellingBytes() {
      Object ref = celling_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        celling_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLOOR_FIELD_NUMBER = 16;
    private volatile Object floor_;
    /**
     * <code>string floor = 16;</code>
     * @return The floor.
     */
    @Override
    public String getFloor() {
      Object ref = floor_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        floor_ = s;
        return s;
      }
    }
    /**
     * <code>string floor = 16;</code>
     * @return The bytes for floor.
     */
    @Override
    public com.google.protobuf.ByteString
        getFloorBytes() {
      Object ref = floor_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        floor_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRODUCT_TYPE_FIELD_NUMBER = 17;
    private int productType_;
    /**
     * <code>.ProductType product_type = 17;</code>
     * @return The enum numeric value on the wire for productType.
     */
    @Override public int getProductTypeValue() {
      return productType_;
    }
    /**
     * <code>.ProductType product_type = 17;</code>
     * @return The productType.
     */
    @Override public TradingModel.ProductType getProductType() {
      @SuppressWarnings("deprecation")
      TradingModel.ProductType result = TradingModel.ProductType.valueOf(productType_);
      return result == null ? TradingModel.ProductType.UNRECOGNIZED : result;
    }

    public static final int TICK_SIZE_FIELD_NUMBER = 18;
    private volatile Object tickSize_;
    /**
     * <code>string tick_size = 18;</code>
     * @return The tickSize.
     */
    @Override
    public String getTickSize() {
      Object ref = tickSize_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        tickSize_ = s;
        return s;
      }
    }
    /**
     * <code>string tick_size = 18;</code>
     * @return The bytes for tickSize.
     */
    @Override
    public com.google.protobuf.ByteString
        getTickSizeBytes() {
      Object ref = tickSize_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        tickSize_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRADING_UNIT_FIELD_NUMBER = 19;
    private long tradingUnit_;
    /**
     * <code>int64 trading_unit = 19;</code>
     * @return The tradingUnit.
     */
    @Override
    public long getTradingUnit() {
      return tradingUnit_;
    }

    public static final int MARGIN_MODE_FIELD_NUMBER = 20;
    private int marginMode_;
    /**
     * <code>.MarginMode margin_mode = 20;</code>
     * @return The enum numeric value on the wire for marginMode.
     */
    @Override public int getMarginModeValue() {
      return marginMode_;
    }
    /**
     * <code>.MarginMode margin_mode = 20;</code>
     * @return The marginMode.
     */
    @Override public MarginMode getMarginMode() {
      @SuppressWarnings("deprecation")
      MarginMode result = MarginMode.valueOf(marginMode_);
      return result == null ? MarginMode.UNRECOGNIZED : result;
    }

    public static final int STATUS_FIELD_NUMBER = 21;
    private int status_;
    /**
     * <code>.SymbolStatus status = 21;</code>
     * @return The enum numeric value on the wire for status.
     */
    @Override public int getStatusValue() {
      return status_;
    }
    /**
     * <code>.SymbolStatus status = 21;</code>
     * @return The status.
     */
    @Override public SymbolStatus getStatus() {
      @SuppressWarnings("deprecation")
      SymbolStatus result = SymbolStatus.valueOf(status_);
      return result == null ? SymbolStatus.UNRECOGNIZED : result;
    }

    public static final int PRODUCT_CODE_FIELD_NUMBER = 22;
    private volatile Object productCode_;
    /**
     * <code>string product_code = 22;</code>
     * @return The productCode.
     */
    @Override
    public String getProductCode() {
      Object ref = productCode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        productCode_ = s;
        return s;
      }
    }
    /**
     * <code>string product_code = 22;</code>
     * @return The bytes for productCode.
     */
    @Override
    public com.google.protobuf.ByteString
        getProductCodeBytes() {
      Object ref = productCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        productCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SPAN_FIELD_NUMBER = 23;
    private Span span_;
    /**
     * <code>.Span span = 23;</code>
     * @return Whether the span field is set.
     */
    @Override
    public boolean hasSpan() {
      return span_ != null;
    }
    /**
     * <code>.Span span = 23;</code>
     * @return The span.
     */
    @Override
    public Span getSpan() {
      return span_ == null ? Span.getDefaultInstance() : span_;
    }
    /**
     * <code>.Span span = 23;</code>
     */
    @Override
    public SpanOrBuilder getSpanOrBuilder() {
      return getSpan();
    }

    public static final int CP_FIELD_NUMBER = 24;
    private int cp_;
    /**
     * <code>.CallPut cp = 24;</code>
     * @return The enum numeric value on the wire for cp.
     */
    @Override public int getCpValue() {
      return cp_;
    }
    /**
     * <code>.CallPut cp = 24;</code>
     * @return The cp.
     */
    @Override public CallPut getCp() {
      @SuppressWarnings("deprecation")
      CallPut result = CallPut.valueOf(cp_);
      return result == null ? CallPut.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (symbolId_ != 0) {
        output.writeInt32(1, symbolId_);
      }
      if (groupId_ != 0) {
        output.writeInt32(2, groupId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(symbolCode_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, symbolCode_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(symbolName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, symbolName_);
      }
      if (calculationMode_ != CalculationMode.CAL_NONE.getNumber()) {
        output.writeEnum(5, calculationMode_);
      }
      if (contractSize_ != 0L) {
        output.writeInt64(6, contractSize_);
      }
      if (digits_ != 0L) {
        output.writeInt64(7, digits_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(exchangeCode_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, exchangeCode_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(currencyCode_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, currencyCode_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, description_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(strikePrice_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, strikePrice_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(contractMonth_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, contractMonth_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(limitMax_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 13, limitMax_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(limitDown_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, limitDown_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(celling_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 15, celling_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(floor_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 16, floor_);
      }
      if (productType_ != TradingModel.ProductType.PT_NONE.getNumber()) {
        output.writeEnum(17, productType_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tickSize_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 18, tickSize_);
      }
      if (tradingUnit_ != 0L) {
        output.writeInt64(19, tradingUnit_);
      }
      if (marginMode_ != MarginMode.MARGIN_MODE_NONE.getNumber()) {
        output.writeEnum(20, marginMode_);
      }
      if (status_ != SymbolStatus.SYMBOL_NONE.getNumber()) {
        output.writeEnum(21, status_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(productCode_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 22, productCode_);
      }
      if (span_ != null) {
        output.writeMessage(23, getSpan());
      }
      if (cp_ != CallPut.CP_NONE.getNumber()) {
        output.writeEnum(24, cp_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (symbolId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, symbolId_);
      }
      if (groupId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, groupId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(symbolCode_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, symbolCode_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(symbolName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, symbolName_);
      }
      if (calculationMode_ != CalculationMode.CAL_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, calculationMode_);
      }
      if (contractSize_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, contractSize_);
      }
      if (digits_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, digits_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(exchangeCode_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, exchangeCode_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(currencyCode_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, currencyCode_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, description_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(strikePrice_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, strikePrice_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(contractMonth_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, contractMonth_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(limitMax_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, limitMax_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(limitDown_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, limitDown_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(celling_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, celling_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(floor_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, floor_);
      }
      if (productType_ != TradingModel.ProductType.PT_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(17, productType_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tickSize_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(18, tickSize_);
      }
      if (tradingUnit_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(19, tradingUnit_);
      }
      if (marginMode_ != MarginMode.MARGIN_MODE_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(20, marginMode_);
      }
      if (status_ != SymbolStatus.SYMBOL_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(21, status_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(productCode_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(22, productCode_);
      }
      if (span_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, getSpan());
      }
      if (cp_ != CallPut.CP_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(24, cp_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Symbol)) {
        return super.equals(obj);
      }
      Symbol other = (Symbol) obj;

      if (getSymbolId()
          != other.getSymbolId()) return false;
      if (getGroupId()
          != other.getGroupId()) return false;
      if (!getSymbolCode()
          .equals(other.getSymbolCode())) return false;
      if (!getSymbolName()
          .equals(other.getSymbolName())) return false;
      if (calculationMode_ != other.calculationMode_) return false;
      if (getContractSize()
          != other.getContractSize()) return false;
      if (getDigits()
          != other.getDigits()) return false;
      if (!getExchangeCode()
          .equals(other.getExchangeCode())) return false;
      if (!getCurrencyCode()
          .equals(other.getCurrencyCode())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getStrikePrice()
          .equals(other.getStrikePrice())) return false;
      if (!getContractMonth()
          .equals(other.getContractMonth())) return false;
      if (!getLimitMax()
          .equals(other.getLimitMax())) return false;
      if (!getLimitDown()
          .equals(other.getLimitDown())) return false;
      if (!getCelling()
          .equals(other.getCelling())) return false;
      if (!getFloor()
          .equals(other.getFloor())) return false;
      if (productType_ != other.productType_) return false;
      if (!getTickSize()
          .equals(other.getTickSize())) return false;
      if (getTradingUnit()
          != other.getTradingUnit()) return false;
      if (marginMode_ != other.marginMode_) return false;
      if (status_ != other.status_) return false;
      if (!getProductCode()
          .equals(other.getProductCode())) return false;
      if (hasSpan() != other.hasSpan()) return false;
      if (hasSpan()) {
        if (!getSpan()
            .equals(other.getSpan())) return false;
      }
      if (cp_ != other.cp_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SYMBOL_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSymbolId();
      hash = (37 * hash) + GROUP_ID_FIELD_NUMBER;
      hash = (53 * hash) + getGroupId();
      hash = (37 * hash) + SYMBOL_CODE_FIELD_NUMBER;
      hash = (53 * hash) + getSymbolCode().hashCode();
      hash = (37 * hash) + SYMBOL_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getSymbolName().hashCode();
      hash = (37 * hash) + CALCULATION_MODE_FIELD_NUMBER;
      hash = (53 * hash) + calculationMode_;
      hash = (37 * hash) + CONTRACT_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getContractSize());
      hash = (37 * hash) + DIGITS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDigits());
      hash = (37 * hash) + EXCHANGE_CODE_FIELD_NUMBER;
      hash = (53 * hash) + getExchangeCode().hashCode();
      hash = (37 * hash) + CURRENCY_CODE_FIELD_NUMBER;
      hash = (53 * hash) + getCurrencyCode().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + STRIKE_PRICE_FIELD_NUMBER;
      hash = (53 * hash) + getStrikePrice().hashCode();
      hash = (37 * hash) + CONTRACT_MONTH_FIELD_NUMBER;
      hash = (53 * hash) + getContractMonth().hashCode();
      hash = (37 * hash) + LIMIT_MAX_FIELD_NUMBER;
      hash = (53 * hash) + getLimitMax().hashCode();
      hash = (37 * hash) + LIMIT_DOWN_FIELD_NUMBER;
      hash = (53 * hash) + getLimitDown().hashCode();
      hash = (37 * hash) + CELLING_FIELD_NUMBER;
      hash = (53 * hash) + getCelling().hashCode();
      hash = (37 * hash) + FLOOR_FIELD_NUMBER;
      hash = (53 * hash) + getFloor().hashCode();
      hash = (37 * hash) + PRODUCT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + productType_;
      hash = (37 * hash) + TICK_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getTickSize().hashCode();
      hash = (37 * hash) + TRADING_UNIT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTradingUnit());
      hash = (37 * hash) + MARGIN_MODE_FIELD_NUMBER;
      hash = (53 * hash) + marginMode_;
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + status_;
      hash = (37 * hash) + PRODUCT_CODE_FIELD_NUMBER;
      hash = (53 * hash) + getProductCode().hashCode();
      if (hasSpan()) {
        hash = (37 * hash) + SPAN_FIELD_NUMBER;
        hash = (53 * hash) + getSpan().hashCode();
      }
      hash = (37 * hash) + CP_FIELD_NUMBER;
      hash = (53 * hash) + cp_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Symbol parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Symbol parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Symbol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Symbol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Symbol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Symbol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Symbol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Symbol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Symbol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Symbol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Symbol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Symbol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Symbol prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Symbol}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Symbol)
        SymbolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return QueryModel.internal_static_Symbol_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return QueryModel.internal_static_Symbol_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Symbol.class, Builder.class);
      }

      // Construct using QueryModel.Symbol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        symbolId_ = 0;

        groupId_ = 0;

        symbolCode_ = "";

        symbolName_ = "";

        calculationMode_ = 0;

        contractSize_ = 0L;

        digits_ = 0L;

        exchangeCode_ = "";

        currencyCode_ = "";

        description_ = "";

        strikePrice_ = "";

        contractMonth_ = "";

        limitMax_ = "";

        limitDown_ = "";

        celling_ = "";

        floor_ = "";

        productType_ = 0;

        tickSize_ = "";

        tradingUnit_ = 0L;

        marginMode_ = 0;

        status_ = 0;

        productCode_ = "";

        if (spanBuilder_ == null) {
          span_ = null;
        } else {
          span_ = null;
          spanBuilder_ = null;
        }
        cp_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return QueryModel.internal_static_Symbol_descriptor;
      }

      @Override
      public Symbol getDefaultInstanceForType() {
        return Symbol.getDefaultInstance();
      }

      @Override
      public Symbol build() {
        Symbol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Symbol buildPartial() {
        Symbol result = new Symbol(this);
        result.symbolId_ = symbolId_;
        result.groupId_ = groupId_;
        result.symbolCode_ = symbolCode_;
        result.symbolName_ = symbolName_;
        result.calculationMode_ = calculationMode_;
        result.contractSize_ = contractSize_;
        result.digits_ = digits_;
        result.exchangeCode_ = exchangeCode_;
        result.currencyCode_ = currencyCode_;
        result.description_ = description_;
        result.strikePrice_ = strikePrice_;
        result.contractMonth_ = contractMonth_;
        result.limitMax_ = limitMax_;
        result.limitDown_ = limitDown_;
        result.celling_ = celling_;
        result.floor_ = floor_;
        result.productType_ = productType_;
        result.tickSize_ = tickSize_;
        result.tradingUnit_ = tradingUnit_;
        result.marginMode_ = marginMode_;
        result.status_ = status_;
        result.productCode_ = productCode_;
        if (spanBuilder_ == null) {
          result.span_ = span_;
        } else {
          result.span_ = spanBuilder_.build();
        }
        result.cp_ = cp_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Symbol) {
          return mergeFrom((Symbol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Symbol other) {
        if (other == Symbol.getDefaultInstance()) return this;
        if (other.getSymbolId() != 0) {
          setSymbolId(other.getSymbolId());
        }
        if (other.getGroupId() != 0) {
          setGroupId(other.getGroupId());
        }
        if (!other.getSymbolCode().isEmpty()) {
          symbolCode_ = other.symbolCode_;
          onChanged();
        }
        if (!other.getSymbolName().isEmpty()) {
          symbolName_ = other.symbolName_;
          onChanged();
        }
        if (other.calculationMode_ != 0) {
          setCalculationModeValue(other.getCalculationModeValue());
        }
        if (other.getContractSize() != 0L) {
          setContractSize(other.getContractSize());
        }
        if (other.getDigits() != 0L) {
          setDigits(other.getDigits());
        }
        if (!other.getExchangeCode().isEmpty()) {
          exchangeCode_ = other.exchangeCode_;
          onChanged();
        }
        if (!other.getCurrencyCode().isEmpty()) {
          currencyCode_ = other.currencyCode_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getStrikePrice().isEmpty()) {
          strikePrice_ = other.strikePrice_;
          onChanged();
        }
        if (!other.getContractMonth().isEmpty()) {
          contractMonth_ = other.contractMonth_;
          onChanged();
        }
        if (!other.getLimitMax().isEmpty()) {
          limitMax_ = other.limitMax_;
          onChanged();
        }
        if (!other.getLimitDown().isEmpty()) {
          limitDown_ = other.limitDown_;
          onChanged();
        }
        if (!other.getCelling().isEmpty()) {
          celling_ = other.celling_;
          onChanged();
        }
        if (!other.getFloor().isEmpty()) {
          floor_ = other.floor_;
          onChanged();
        }
        if (other.productType_ != 0) {
          setProductTypeValue(other.getProductTypeValue());
        }
        if (!other.getTickSize().isEmpty()) {
          tickSize_ = other.tickSize_;
          onChanged();
        }
        if (other.getTradingUnit() != 0L) {
          setTradingUnit(other.getTradingUnit());
        }
        if (other.marginMode_ != 0) {
          setMarginModeValue(other.getMarginModeValue());
        }
        if (other.status_ != 0) {
          setStatusValue(other.getStatusValue());
        }
        if (!other.getProductCode().isEmpty()) {
          productCode_ = other.productCode_;
          onChanged();
        }
        if (other.hasSpan()) {
          mergeSpan(other.getSpan());
        }
        if (other.cp_ != 0) {
          setCpValue(other.getCpValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Symbol parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Symbol) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int symbolId_ ;
      /**
       * <code>int32 symbol_id = 1;</code>
       * @return The symbolId.
       */
      @Override
      public int getSymbolId() {
        return symbolId_;
      }
      /**
       * <code>int32 symbol_id = 1;</code>
       * @param value The symbolId to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolId(int value) {
        
        symbolId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 symbol_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbolId() {
        
        symbolId_ = 0;
        onChanged();
        return this;
      }

      private int groupId_ ;
      /**
       * <code>int32 group_id = 2;</code>
       * @return The groupId.
       */
      @Override
      public int getGroupId() {
        return groupId_;
      }
      /**
       * <code>int32 group_id = 2;</code>
       * @param value The groupId to set.
       * @return This builder for chaining.
       */
      public Builder setGroupId(int value) {
        
        groupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 group_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearGroupId() {
        
        groupId_ = 0;
        onChanged();
        return this;
      }

      private Object symbolCode_ = "";
      /**
       * <code>string symbol_code = 3;</code>
       * @return The symbolCode.
       */
      public String getSymbolCode() {
        Object ref = symbolCode_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          symbolCode_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string symbol_code = 3;</code>
       * @return The bytes for symbolCode.
       */
      public com.google.protobuf.ByteString
          getSymbolCodeBytes() {
        Object ref = symbolCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          symbolCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string symbol_code = 3;</code>
       * @param value The symbolCode to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolCode(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        symbolCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string symbol_code = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbolCode() {
        
        symbolCode_ = getDefaultInstance().getSymbolCode();
        onChanged();
        return this;
      }
      /**
       * <code>string symbol_code = 3;</code>
       * @param value The bytes for symbolCode to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        symbolCode_ = value;
        onChanged();
        return this;
      }

      private Object symbolName_ = "";
      /**
       * <code>string symbol_name = 4;</code>
       * @return The symbolName.
       */
      public String getSymbolName() {
        Object ref = symbolName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          symbolName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string symbol_name = 4;</code>
       * @return The bytes for symbolName.
       */
      public com.google.protobuf.ByteString
          getSymbolNameBytes() {
        Object ref = symbolName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          symbolName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string symbol_name = 4;</code>
       * @param value The symbolName to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        symbolName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string symbol_name = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbolName() {
        
        symbolName_ = getDefaultInstance().getSymbolName();
        onChanged();
        return this;
      }
      /**
       * <code>string symbol_name = 4;</code>
       * @param value The bytes for symbolName to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        symbolName_ = value;
        onChanged();
        return this;
      }

      private int calculationMode_ = 0;
      /**
       * <code>.CalculationMode calculation_mode = 5;</code>
       * @return The enum numeric value on the wire for calculationMode.
       */
      @Override public int getCalculationModeValue() {
        return calculationMode_;
      }
      /**
       * <code>.CalculationMode calculation_mode = 5;</code>
       * @param value The enum numeric value on the wire for calculationMode to set.
       * @return This builder for chaining.
       */
      public Builder setCalculationModeValue(int value) {
        
        calculationMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.CalculationMode calculation_mode = 5;</code>
       * @return The calculationMode.
       */
      @Override
      public CalculationMode getCalculationMode() {
        @SuppressWarnings("deprecation")
        CalculationMode result = CalculationMode.valueOf(calculationMode_);
        return result == null ? CalculationMode.UNRECOGNIZED : result;
      }
      /**
       * <code>.CalculationMode calculation_mode = 5;</code>
       * @param value The calculationMode to set.
       * @return This builder for chaining.
       */
      public Builder setCalculationMode(CalculationMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        calculationMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.CalculationMode calculation_mode = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCalculationMode() {
        
        calculationMode_ = 0;
        onChanged();
        return this;
      }

      private long contractSize_ ;
      /**
       * <code>int64 contract_size = 6;</code>
       * @return The contractSize.
       */
      @Override
      public long getContractSize() {
        return contractSize_;
      }
      /**
       * <code>int64 contract_size = 6;</code>
       * @param value The contractSize to set.
       * @return This builder for chaining.
       */
      public Builder setContractSize(long value) {
        
        contractSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 contract_size = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearContractSize() {
        
        contractSize_ = 0L;
        onChanged();
        return this;
      }

      private long digits_ ;
      /**
       * <code>int64 digits = 7;</code>
       * @return The digits.
       */
      @Override
      public long getDigits() {
        return digits_;
      }
      /**
       * <code>int64 digits = 7;</code>
       * @param value The digits to set.
       * @return This builder for chaining.
       */
      public Builder setDigits(long value) {
        
        digits_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 digits = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearDigits() {
        
        digits_ = 0L;
        onChanged();
        return this;
      }

      private Object exchangeCode_ = "";
      /**
       * <code>string exchange_code = 8;</code>
       * @return The exchangeCode.
       */
      public String getExchangeCode() {
        Object ref = exchangeCode_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          exchangeCode_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string exchange_code = 8;</code>
       * @return The bytes for exchangeCode.
       */
      public com.google.protobuf.ByteString
          getExchangeCodeBytes() {
        Object ref = exchangeCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          exchangeCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string exchange_code = 8;</code>
       * @param value The exchangeCode to set.
       * @return This builder for chaining.
       */
      public Builder setExchangeCode(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        exchangeCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string exchange_code = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearExchangeCode() {
        
        exchangeCode_ = getDefaultInstance().getExchangeCode();
        onChanged();
        return this;
      }
      /**
       * <code>string exchange_code = 8;</code>
       * @param value The bytes for exchangeCode to set.
       * @return This builder for chaining.
       */
      public Builder setExchangeCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        exchangeCode_ = value;
        onChanged();
        return this;
      }

      private Object currencyCode_ = "";
      /**
       * <code>string currency_code = 9;</code>
       * @return The currencyCode.
       */
      public String getCurrencyCode() {
        Object ref = currencyCode_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          currencyCode_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string currency_code = 9;</code>
       * @return The bytes for currencyCode.
       */
      public com.google.protobuf.ByteString
          getCurrencyCodeBytes() {
        Object ref = currencyCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          currencyCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string currency_code = 9;</code>
       * @param value The currencyCode to set.
       * @return This builder for chaining.
       */
      public Builder setCurrencyCode(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        currencyCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string currency_code = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrencyCode() {
        
        currencyCode_ = getDefaultInstance().getCurrencyCode();
        onChanged();
        return this;
      }
      /**
       * <code>string currency_code = 9;</code>
       * @param value The bytes for currencyCode to set.
       * @return This builder for chaining.
       */
      public Builder setCurrencyCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        currencyCode_ = value;
        onChanged();
        return this;
      }

      private Object description_ = "";
      /**
       * <code>string description = 10;</code>
       * @return The description.
       */
      public String getDescription() {
        Object ref = description_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string description = 10;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string description = 10;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string description = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <code>string description = 10;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private Object strikePrice_ = "";
      /**
       * <code>string strike_price = 11;</code>
       * @return The strikePrice.
       */
      public String getStrikePrice() {
        Object ref = strikePrice_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          strikePrice_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string strike_price = 11;</code>
       * @return The bytes for strikePrice.
       */
      public com.google.protobuf.ByteString
          getStrikePriceBytes() {
        Object ref = strikePrice_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          strikePrice_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string strike_price = 11;</code>
       * @param value The strikePrice to set.
       * @return This builder for chaining.
       */
      public Builder setStrikePrice(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        strikePrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string strike_price = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearStrikePrice() {
        
        strikePrice_ = getDefaultInstance().getStrikePrice();
        onChanged();
        return this;
      }
      /**
       * <code>string strike_price = 11;</code>
       * @param value The bytes for strikePrice to set.
       * @return This builder for chaining.
       */
      public Builder setStrikePriceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        strikePrice_ = value;
        onChanged();
        return this;
      }

      private Object contractMonth_ = "";
      /**
       * <code>string contract_month = 12;</code>
       * @return The contractMonth.
       */
      public String getContractMonth() {
        Object ref = contractMonth_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          contractMonth_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string contract_month = 12;</code>
       * @return The bytes for contractMonth.
       */
      public com.google.protobuf.ByteString
          getContractMonthBytes() {
        Object ref = contractMonth_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          contractMonth_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string contract_month = 12;</code>
       * @param value The contractMonth to set.
       * @return This builder for chaining.
       */
      public Builder setContractMonth(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        contractMonth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string contract_month = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearContractMonth() {
        
        contractMonth_ = getDefaultInstance().getContractMonth();
        onChanged();
        return this;
      }
      /**
       * <code>string contract_month = 12;</code>
       * @param value The bytes for contractMonth to set.
       * @return This builder for chaining.
       */
      public Builder setContractMonthBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        contractMonth_ = value;
        onChanged();
        return this;
      }

      private Object limitMax_ = "";
      /**
       * <code>string limit_max = 13;</code>
       * @return The limitMax.
       */
      public String getLimitMax() {
        Object ref = limitMax_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          limitMax_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string limit_max = 13;</code>
       * @return The bytes for limitMax.
       */
      public com.google.protobuf.ByteString
          getLimitMaxBytes() {
        Object ref = limitMax_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          limitMax_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string limit_max = 13;</code>
       * @param value The limitMax to set.
       * @return This builder for chaining.
       */
      public Builder setLimitMax(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        limitMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string limit_max = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearLimitMax() {
        
        limitMax_ = getDefaultInstance().getLimitMax();
        onChanged();
        return this;
      }
      /**
       * <code>string limit_max = 13;</code>
       * @param value The bytes for limitMax to set.
       * @return This builder for chaining.
       */
      public Builder setLimitMaxBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        limitMax_ = value;
        onChanged();
        return this;
      }

      private Object limitDown_ = "";
      /**
       * <code>string limit_down = 14;</code>
       * @return The limitDown.
       */
      public String getLimitDown() {
        Object ref = limitDown_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          limitDown_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string limit_down = 14;</code>
       * @return The bytes for limitDown.
       */
      public com.google.protobuf.ByteString
          getLimitDownBytes() {
        Object ref = limitDown_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          limitDown_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string limit_down = 14;</code>
       * @param value The limitDown to set.
       * @return This builder for chaining.
       */
      public Builder setLimitDown(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        limitDown_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string limit_down = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearLimitDown() {
        
        limitDown_ = getDefaultInstance().getLimitDown();
        onChanged();
        return this;
      }
      /**
       * <code>string limit_down = 14;</code>
       * @param value The bytes for limitDown to set.
       * @return This builder for chaining.
       */
      public Builder setLimitDownBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        limitDown_ = value;
        onChanged();
        return this;
      }

      private Object celling_ = "";
      /**
       * <code>string celling = 15;</code>
       * @return The celling.
       */
      public String getCelling() {
        Object ref = celling_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          celling_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string celling = 15;</code>
       * @return The bytes for celling.
       */
      public com.google.protobuf.ByteString
          getCellingBytes() {
        Object ref = celling_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          celling_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string celling = 15;</code>
       * @param value The celling to set.
       * @return This builder for chaining.
       */
      public Builder setCelling(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        celling_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string celling = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearCelling() {
        
        celling_ = getDefaultInstance().getCelling();
        onChanged();
        return this;
      }
      /**
       * <code>string celling = 15;</code>
       * @param value The bytes for celling to set.
       * @return This builder for chaining.
       */
      public Builder setCellingBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        celling_ = value;
        onChanged();
        return this;
      }

      private Object floor_ = "";
      /**
       * <code>string floor = 16;</code>
       * @return The floor.
       */
      public String getFloor() {
        Object ref = floor_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          floor_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string floor = 16;</code>
       * @return The bytes for floor.
       */
      public com.google.protobuf.ByteString
          getFloorBytes() {
        Object ref = floor_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          floor_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string floor = 16;</code>
       * @param value The floor to set.
       * @return This builder for chaining.
       */
      public Builder setFloor(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        floor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string floor = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearFloor() {
        
        floor_ = getDefaultInstance().getFloor();
        onChanged();
        return this;
      }
      /**
       * <code>string floor = 16;</code>
       * @param value The bytes for floor to set.
       * @return This builder for chaining.
       */
      public Builder setFloorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        floor_ = value;
        onChanged();
        return this;
      }

      private int productType_ = 0;
      /**
       * <code>.ProductType product_type = 17;</code>
       * @return The enum numeric value on the wire for productType.
       */
      @Override public int getProductTypeValue() {
        return productType_;
      }
      /**
       * <code>.ProductType product_type = 17;</code>
       * @param value The enum numeric value on the wire for productType to set.
       * @return This builder for chaining.
       */
      public Builder setProductTypeValue(int value) {
        
        productType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.ProductType product_type = 17;</code>
       * @return The productType.
       */
      @Override
      public TradingModel.ProductType getProductType() {
        @SuppressWarnings("deprecation")
        TradingModel.ProductType result = TradingModel.ProductType.valueOf(productType_);
        return result == null ? TradingModel.ProductType.UNRECOGNIZED : result;
      }
      /**
       * <code>.ProductType product_type = 17;</code>
       * @param value The productType to set.
       * @return This builder for chaining.
       */
      public Builder setProductType(TradingModel.ProductType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        productType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.ProductType product_type = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearProductType() {
        
        productType_ = 0;
        onChanged();
        return this;
      }

      private Object tickSize_ = "";
      /**
       * <code>string tick_size = 18;</code>
       * @return The tickSize.
       */
      public String getTickSize() {
        Object ref = tickSize_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          tickSize_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string tick_size = 18;</code>
       * @return The bytes for tickSize.
       */
      public com.google.protobuf.ByteString
          getTickSizeBytes() {
        Object ref = tickSize_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          tickSize_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string tick_size = 18;</code>
       * @param value The tickSize to set.
       * @return This builder for chaining.
       */
      public Builder setTickSize(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tickSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string tick_size = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearTickSize() {
        
        tickSize_ = getDefaultInstance().getTickSize();
        onChanged();
        return this;
      }
      /**
       * <code>string tick_size = 18;</code>
       * @param value The bytes for tickSize to set.
       * @return This builder for chaining.
       */
      public Builder setTickSizeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tickSize_ = value;
        onChanged();
        return this;
      }

      private long tradingUnit_ ;
      /**
       * <code>int64 trading_unit = 19;</code>
       * @return The tradingUnit.
       */
      @Override
      public long getTradingUnit() {
        return tradingUnit_;
      }
      /**
       * <code>int64 trading_unit = 19;</code>
       * @param value The tradingUnit to set.
       * @return This builder for chaining.
       */
      public Builder setTradingUnit(long value) {
        
        tradingUnit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 trading_unit = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearTradingUnit() {
        
        tradingUnit_ = 0L;
        onChanged();
        return this;
      }

      private int marginMode_ = 0;
      /**
       * <code>.MarginMode margin_mode = 20;</code>
       * @return The enum numeric value on the wire for marginMode.
       */
      @Override public int getMarginModeValue() {
        return marginMode_;
      }
      /**
       * <code>.MarginMode margin_mode = 20;</code>
       * @param value The enum numeric value on the wire for marginMode to set.
       * @return This builder for chaining.
       */
      public Builder setMarginModeValue(int value) {
        
        marginMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.MarginMode margin_mode = 20;</code>
       * @return The marginMode.
       */
      @Override
      public MarginMode getMarginMode() {
        @SuppressWarnings("deprecation")
        MarginMode result = MarginMode.valueOf(marginMode_);
        return result == null ? MarginMode.UNRECOGNIZED : result;
      }
      /**
       * <code>.MarginMode margin_mode = 20;</code>
       * @param value The marginMode to set.
       * @return This builder for chaining.
       */
      public Builder setMarginMode(MarginMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        marginMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.MarginMode margin_mode = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearMarginMode() {
        
        marginMode_ = 0;
        onChanged();
        return this;
      }

      private int status_ = 0;
      /**
       * <code>.SymbolStatus status = 21;</code>
       * @return The enum numeric value on the wire for status.
       */
      @Override public int getStatusValue() {
        return status_;
      }
      /**
       * <code>.SymbolStatus status = 21;</code>
       * @param value The enum numeric value on the wire for status to set.
       * @return This builder for chaining.
       */
      public Builder setStatusValue(int value) {
        
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.SymbolStatus status = 21;</code>
       * @return The status.
       */
      @Override
      public SymbolStatus getStatus() {
        @SuppressWarnings("deprecation")
        SymbolStatus result = SymbolStatus.valueOf(status_);
        return result == null ? SymbolStatus.UNRECOGNIZED : result;
      }
      /**
       * <code>.SymbolStatus status = 21;</code>
       * @param value The status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(SymbolStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        status_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.SymbolStatus status = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        
        status_ = 0;
        onChanged();
        return this;
      }

      private Object productCode_ = "";
      /**
       * <code>string product_code = 22;</code>
       * @return The productCode.
       */
      public String getProductCode() {
        Object ref = productCode_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          productCode_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string product_code = 22;</code>
       * @return The bytes for productCode.
       */
      public com.google.protobuf.ByteString
          getProductCodeBytes() {
        Object ref = productCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          productCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string product_code = 22;</code>
       * @param value The productCode to set.
       * @return This builder for chaining.
       */
      public Builder setProductCode(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        productCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string product_code = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearProductCode() {
        
        productCode_ = getDefaultInstance().getProductCode();
        onChanged();
        return this;
      }
      /**
       * <code>string product_code = 22;</code>
       * @param value The bytes for productCode to set.
       * @return This builder for chaining.
       */
      public Builder setProductCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        productCode_ = value;
        onChanged();
        return this;
      }

      private Span span_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Span, Span.Builder, SpanOrBuilder> spanBuilder_;
      /**
       * <code>.Span span = 23;</code>
       * @return Whether the span field is set.
       */
      public boolean hasSpan() {
        return spanBuilder_ != null || span_ != null;
      }
      /**
       * <code>.Span span = 23;</code>
       * @return The span.
       */
      public Span getSpan() {
        if (spanBuilder_ == null) {
          return span_ == null ? Span.getDefaultInstance() : span_;
        } else {
          return spanBuilder_.getMessage();
        }
      }
      /**
       * <code>.Span span = 23;</code>
       */
      public Builder setSpan(Span value) {
        if (spanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          span_ = value;
          onChanged();
        } else {
          spanBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Span span = 23;</code>
       */
      public Builder setSpan(
          Span.Builder builderForValue) {
        if (spanBuilder_ == null) {
          span_ = builderForValue.build();
          onChanged();
        } else {
          spanBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Span span = 23;</code>
       */
      public Builder mergeSpan(Span value) {
        if (spanBuilder_ == null) {
          if (span_ != null) {
            span_ =
              Span.newBuilder(span_).mergeFrom(value).buildPartial();
          } else {
            span_ = value;
          }
          onChanged();
        } else {
          spanBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Span span = 23;</code>
       */
      public Builder clearSpan() {
        if (spanBuilder_ == null) {
          span_ = null;
          onChanged();
        } else {
          span_ = null;
          spanBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Span span = 23;</code>
       */
      public Span.Builder getSpanBuilder() {
        
        onChanged();
        return getSpanFieldBuilder().getBuilder();
      }
      /**
       * <code>.Span span = 23;</code>
       */
      public SpanOrBuilder getSpanOrBuilder() {
        if (spanBuilder_ != null) {
          return spanBuilder_.getMessageOrBuilder();
        } else {
          return span_ == null ?
              Span.getDefaultInstance() : span_;
        }
      }
      /**
       * <code>.Span span = 23;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Span, Span.Builder, SpanOrBuilder>
          getSpanFieldBuilder() {
        if (spanBuilder_ == null) {
          spanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Span, Span.Builder, SpanOrBuilder>(
                  getSpan(),
                  getParentForChildren(),
                  isClean());
          span_ = null;
        }
        return spanBuilder_;
      }

      private int cp_ = 0;
      /**
       * <code>.CallPut cp = 24;</code>
       * @return The enum numeric value on the wire for cp.
       */
      @Override public int getCpValue() {
        return cp_;
      }
      /**
       * <code>.CallPut cp = 24;</code>
       * @param value The enum numeric value on the wire for cp to set.
       * @return This builder for chaining.
       */
      public Builder setCpValue(int value) {
        
        cp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.CallPut cp = 24;</code>
       * @return The cp.
       */
      @Override
      public CallPut getCp() {
        @SuppressWarnings("deprecation")
        CallPut result = CallPut.valueOf(cp_);
        return result == null ? CallPut.UNRECOGNIZED : result;
      }
      /**
       * <code>.CallPut cp = 24;</code>
       * @param value The cp to set.
       * @return This builder for chaining.
       */
      public Builder setCp(CallPut value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        cp_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.CallPut cp = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearCp() {
        
        cp_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Symbol)
    }

    // @@protoc_insertion_point(class_scope:Symbol)
    private static final Symbol DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Symbol();
    }

    public static Symbol getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Symbol>
        PARSER = new com.google.protobuf.AbstractParser<Symbol>() {
      @Override
      public Symbol parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Symbol(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Symbol> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Symbol> getParserForType() {
      return PARSER;
    }

    @Override
    public Symbol getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SpanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Span)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * TODO: Add span value
   * </pre>
   *
   * Protobuf type {@code Span}
   */
  public static final class Span extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Span)
      SpanOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Span.newBuilder() to construct.
    private Span(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Span() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new Span();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Span(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return QueryModel.internal_static_Span_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return QueryModel.internal_static_Span_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Span.class, Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Span)) {
        return super.equals(obj);
      }
      Span other = (Span) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Span parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Span parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Span parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Span parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Span parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Span parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Span parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Span parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Span parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Span parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Span parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Span parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Span prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * TODO: Add span value
     * </pre>
     *
     * Protobuf type {@code Span}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Span)
        SpanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return QueryModel.internal_static_Span_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return QueryModel.internal_static_Span_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Span.class, Builder.class);
      }

      // Construct using QueryModel.Span.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return QueryModel.internal_static_Span_descriptor;
      }

      @Override
      public Span getDefaultInstanceForType() {
        return Span.getDefaultInstance();
      }

      @Override
      public Span build() {
        Span result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Span buildPartial() {
        Span result = new Span(this);
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Span) {
          return mergeFrom((Span)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Span other) {
        if (other == Span.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Span parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Span) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Span)
    }

    // @@protoc_insertion_point(class_scope:Span)
    private static final Span DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Span();
    }

    public static Span getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Span>
        PARSER = new com.google.protobuf.AbstractParser<Span>() {
      @Override
      public Span parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Span(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Span> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Span> getParserForType() {
      return PARSER;
    }

    @Override
    public Span getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Symbol_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Symbol_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Span_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Span_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\021query_model.proto\032\023trading_model.proto" +
      "\"\261\004\n\006Symbol\022\021\n\tsymbol_id\030\001 \001(\005\022\020\n\010group_" +
      "id\030\002 \001(\005\022\023\n\013symbol_code\030\003 \001(\t\022\023\n\013symbol_" +
      "name\030\004 \001(\t\022*\n\020calculation_mode\030\005 \001(\0162\020.C" +
      "alculationMode\022\025\n\rcontract_size\030\006 \001(\003\022\016\n" +
      "\006digits\030\007 \001(\003\022\025\n\rexchange_code\030\010 \001(\t\022\025\n\r" +
      "currency_code\030\t \001(\t\022\023\n\013description\030\n \001(\t" +
      "\022\024\n\014strike_price\030\013 \001(\t\022\026\n\016contract_month" +
      "\030\014 \001(\t\022\021\n\tlimit_max\030\r \001(\t\022\022\n\nlimit_down\030" +
      "\016 \001(\t\022\017\n\007celling\030\017 \001(\t\022\r\n\005floor\030\020 \001(\t\022\"\n" +
      "\014product_type\030\021 \001(\0162\014.ProductType\022\021\n\ttic" +
      "k_size\030\022 \001(\t\022\024\n\014trading_unit\030\023 \001(\003\022 \n\013ma" +
      "rgin_mode\030\024 \001(\0162\013.MarginMode\022\035\n\006status\030\025" +
      " \001(\0162\r.SymbolStatus\022\024\n\014product_code\030\026 \001(" +
      "\t\022\023\n\004span\030\027 \001(\0132\005.Span\022\024\n\002cp\030\030 \001(\0162\010.Cal" +
      "lPut\"\006\n\004Span*X\n\017CalculationMode\022\014\n\010CAL_N" +
      "ONE\020\000\022\013\n\007CAL_CFD\020\001\022\014\n\010CAL_SPAN\020\002\022\r\n\tCAL_" +
      "FOREX\020\003\022\r\n\tCAL_STOCK\020\004*O\n\nMarginMode\022\024\n\020" +
      "MARGIN_MODE_NONE\020\000\022\025\n\021MARGIN_MODE_ALLOW\020" +
      "\001\022\024\n\020MARGIN_MODE_DENY\020\002*H\n\014SymbolStatus\022" +
      "\017\n\013SYMBOL_NONE\020\000\022\021\n\rSYMBOL_ACTIVE\020\001\022\024\n\020S" +
      "YMBOL_SUSPENDED\020\002*/\n\007CallPut\022\013\n\007CP_NONE\020" +
      "\000\022\013\n\007CP_CALL\020\001\022\n\n\006CP_PUT\020\002b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          TradingModel.getDescriptor(),
        });
    internal_static_Symbol_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Symbol_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Symbol_descriptor,
        new String[] { "SymbolId", "GroupId", "SymbolCode", "SymbolName", "CalculationMode", "ContractSize", "Digits", "ExchangeCode", "CurrencyCode", "Description", "StrikePrice", "ContractMonth", "LimitMax", "LimitDown", "Celling", "Floor", "ProductType", "TickSize", "TradingUnit", "MarginMode", "Status", "ProductCode", "Span", "Cp", });
    internal_static_Span_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Span_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Span_descriptor,
        new String[] { });
    TradingModel.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
